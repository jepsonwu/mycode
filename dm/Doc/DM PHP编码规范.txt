一、文件格式及常规
1、不允许结束标志（"?>"），防止被意外注入。
2、缩进由四个空格组成，禁止使用制表符 TAB 。
3、一行最多为 120 个字符。
4、行结束标志遵循 Unix 文本文件的约定，行必需以单个换行符（LF）结束。
5、文件编码统一使用UTF-8格式。
6、使用MVC结构放置文件。程序文件及文件夹的建立应该对应着其程序上的业务关系。
7、全部标志名、类名命名建议使用字母，不建议使用数字。
8、文件夹第一个字母大写，驼峰标准。
9、文件名每单词第一个字母大写，禁止连续大写，允许字母数字字符、下划线可用，禁止空格。
10、类声明、函数、方法等复合语句左边花括号应当另起一行开始，if、switch等块语句在同一行，同Zend标准。
11、通过Use命名空间引入类，在实际使用前并不会包含相关源码文件。可以放心使用Use命名减少类名长度(如use \Doc\Test\UseNameTest)。
 
二、类命名规范
1、类名每单词第一个字母大写，禁止连续大写。
2、对象方法或变量中，不同访问限制的属性不用下划线区分。(ZS编辑器颜色上已经区分，为方便私有函数升级到公有，不做)
3、每个 PHP 文件只有一个类。
4、类成员变量的声明必须在类顶部，在方法上方。
5、public abstract static $var; 禁止var ，用 private、 protected 或 public，并且权限控制关键词放在static前面。注意排序。
7、不建议直接访问 public 属性，使用 Getter/Setter，属性访问级别改 private/protected 。

三、函数和方法
1、函数名只包含字母数字，除开头外禁止下划线。小写开头，多个单词其他单词第一字母大学。驼峰标准。
2、强烈反对使用全局函数，全局函数建议封装到静态类里。
3、返回值不用圆括号，妨碍可读性。若修改成传址方式，代码会有问题。
4、类方法：
    1> 获取某个类的实例约定名称sampleInstance()，获取单例getInstance();
    2> 获取某个属性值使用getProterty();前一条规则优先。
    3> 事件绑定全部使用protected onMethod方式命名，如onBeforeDelete、onAfterDelete删除前后的事件。

四、变量、类属性和常量
1、变量名、类属性小写字母开头并遵循驼峰标准。数据库字段变量名采用和数据库字段统一的首字母大写，驼峰风格。
2、常量所有字母大写，多个单词使用下划线分割。
3、类内部排序：Const常量、public、protected、private这样的顺序下来声明。
4、常量使用const定义为类成员，强烈不鼓励define全局常量。
5、一个循环超过 20 行代码，索引变量名必须描述意义。

五、编码风格
1、字符串若含单引号、变量则用双引号，优先使用单引号。
2、字符串点号连接，点号前后有空格。
3、数组索引不能负数（实现上是没问题的），从0开始。
4、声明关联数组建议分成多行，便于分辨键和值。

六、注释
1、所有文档块 ("docblocks") 必须和 phpDocumentor 格式兼容，参考：http://phpdoc.org/
2、每个函数、方法，至少包含以下docblock：函数描述、参数描述、所有可能返回值。
3、如果函数、方法抛出异常，使用 @throws 于所有已知的异常类。

七、数据库命名规范
1、数据库名和表名都用小写字母，下划线分隔。（Mysql表常不区分表名称大小写，容易出故障。）
2、数据表字段全部以大写字母开头，驼峰分隔。类似PHP类名命名规则，参考实例DuomaiOA，感觉很规范。
3、数据表储存引擎优先使用innodb，支持事务和行级锁。性能也不赖的。
4、数据字段ENUM值也使用驼峰风格。
5、ENum Boolean类型字段使用推荐统一'Y','N'表示。
6、日期字段默认使用Mysql Date类型，时间字段默认使用timestamp类型，可读性良好，基于整型储存，性能高。